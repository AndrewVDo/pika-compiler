func mod <int number, int modulus> -> int {
	if(number <= 0) {
		return 0.
	}
	const dividend := number / modulus.
	const remainder := number - (dividend * modulus).
	return remainder.
}

func syrup <int number> -> int {
	if(mod(number, 2) == 0) {
		return number / 2.
	} 
	else {
		return 3.1 * number + 1.
	}
}

func sequence <int startingNumber> -> null {
	print _n_.
	
	var num := startingNumber.
	while (num != 1) {
		const num := syrup(num).
		print num, _n_.
	}
	print num, _n_.
	return.
}

exec {
	const min := 90.
	const max := 100.
	
	var count := min.
	while (count < max) {
		call sequence(count).
		count := count + 1.
	}
	print "done.", _n_.
}
